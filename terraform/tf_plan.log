
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create
[0m
Terraform will perform the following actions:

[1m  # yandex_compute_image.ubu-img[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "yandex_compute_image" "ubu-img" {
      [32m+[0m [0m[1m[0mcreated_at[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mfolder_id[0m[0m       = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m              = (known after apply)
      [32m+[0m [0m[1m[0mmin_disk_size[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m            = "ubuntu-22-04-lts-v20221214"
      [32m+[0m [0m[1m[0mos_type[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mpooled[0m[0m          = (known after apply)
      [32m+[0m [0m[1m[0mproduct_ids[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0msize[0m[0m            = (known after apply)
      [32m+[0m [0m[1m[0msource_disk[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0msource_family[0m[0m   = (known after apply)
      [32m+[0m [0m[1m[0msource_image[0m[0m    = "fd864gbboths76r8gm5f"
      [32m+[0m [0m[1m[0msource_snapshot[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0msource_url[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m          = (known after apply)
    }

[1m  # yandex_compute_instance.node01[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "yandex_compute_instance" "node01" {
      [32m+[0m [0m[1m[0mallow_stopping_for_update[0m[0m = true
      [32m+[0m [0m[1m[0mcreated_at[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mfolder_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mfqdn[0m[0m                      = (known after apply)
      [32m+[0m [0m[1m[0mhostname[0m[0m                  = "node01.netology.cloud"
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mmetadata[0m[0m                  = {
          [32m+[0m [0m"ssh-keys" = <<-EOT
                centos:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC60OOJfFBx4qoFYFzdVNSPNMEKK4skkeMqlLVeZu7c5okd/JvCNO2e51pVyA7oaJ1IGKEkkKmrWxVxIKLnKorWAB9Gv1dEMM3iXbTxwzUCl2r2pZzt5WztDcDtWB07VvgnXc0/jBBOdjI/KItDU0ni6XQKlUj366Uu0CG0tvM5qriE7mDyWNTqtT8pYhREZrByv1j/2iYceTNLpFAhKhC5Pqaom4uNQSUZH8MVn77Dl4wcjeAb0xXzZeeTJXfYBVhPmOLN0udjGl5dkmYIjlPcTIdLF0UjRt3NDJljCbnkj/FruarUhwpQeYHbIbD3+lc2fgzc/EQDVgTr/RZn9/LAtGOwD8SJDO7SxmfXqrxQdvfqDqfn5h6FpTmtE6seXHK5X0RBCZU1Qmk3o+/rxlgFsTojS/xYlNXGLYGfRcCStP0aTxEB9uDgYFY13WVqBJBTYe/czSMxKJVko6x5sUh85xgWAyFTBhKHoa7Xngd5p/Cp9Uq6wpMGXCJ2TVA1SXc= root@localhost.localdomain
            EOT
        }
      [32m+[0m [0m[1m[0mname[0m[0m                      = "node01"
      [32m+[0m [0m[1m[0mnetwork_acceleration_type[0m[0m = "standard"
      [32m+[0m [0m[1m[0mplatform_id[0m[0m               = "standard-v1"
      [32m+[0m [0m[1m[0mservice_account_id[0m[0m        = (known after apply)
      [32m+[0m [0m[1m[0mstatus[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mzone[0m[0m                      = "ru-central1-a"

      [32m+[0m [0mboot_disk {
          [32m+[0m [0m[1m[0mauto_delete[0m[0m = true
          [32m+[0m [0m[1m[0mdevice_name[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mdisk_id[0m[0m     = (known after apply)
          [32m+[0m [0m[1m[0mmode[0m[0m        = (known after apply)

          [32m+[0m [0minitialize_params {
              [32m+[0m [0m[1m[0mblock_size[0m[0m  = (known after apply)
              [32m+[0m [0m[1m[0mdescription[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mimage_id[0m[0m    = (known after apply)
              [32m+[0m [0m[1m[0mname[0m[0m        = "root-node01"
              [32m+[0m [0m[1m[0msize[0m[0m        = 50
              [32m+[0m [0m[1m[0msnapshot_id[0m[0m = (known after apply)
              [32m+[0m [0m[1m[0mtype[0m[0m        = "network-nvme"
            }
        }

      [32m+[0m [0mnetwork_interface {
          [32m+[0m [0m[1m[0mindex[0m[0m              = (known after apply)
          [32m+[0m [0m[1m[0mip_address[0m[0m         = (known after apply)
          [32m+[0m [0m[1m[0mipv4[0m[0m               = true
          [32m+[0m [0m[1m[0mipv6[0m[0m               = (known after apply)
          [32m+[0m [0m[1m[0mipv6_address[0m[0m       = (known after apply)
          [32m+[0m [0m[1m[0mmac_address[0m[0m        = (known after apply)
          [32m+[0m [0m[1m[0mnat[0m[0m                = true
          [32m+[0m [0m[1m[0mnat_ip_address[0m[0m     = (known after apply)
          [32m+[0m [0m[1m[0mnat_ip_version[0m[0m     = (known after apply)
          [32m+[0m [0m[1m[0msecurity_group_ids[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0msubnet_id[0m[0m          = (known after apply)
        }

      [32m+[0m [0mplacement_policy {
          [32m+[0m [0m[1m[0mhost_affinity_rules[0m[0m = (known after apply)
          [32m+[0m [0m[1m[0mplacement_group_id[0m[0m  = (known after apply)
        }

      [32m+[0m [0mresources {
          [32m+[0m [0m[1m[0mcore_fraction[0m[0m = 100
          [32m+[0m [0m[1m[0mcores[0m[0m         = 2
          [32m+[0m [0m[1m[0mmemory[0m[0m        = 4
        }

      [32m+[0m [0mscheduling_policy {
          [32m+[0m [0m[1m[0mpreemptible[0m[0m = (known after apply)
        }
    }

[1m  # yandex_vpc_network.default[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "yandex_vpc_network" "default" {
      [32m+[0m [0m[1m[0mcreated_at[0m[0m                = (known after apply)
      [32m+[0m [0m[1m[0mdefault_security_group_id[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mfolder_id[0m[0m                 = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m                        = (known after apply)
      [32m+[0m [0m[1m[0mlabels[0m[0m                    = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m                      = "net"
      [32m+[0m [0m[1m[0msubnet_ids[0m[0m                = (known after apply)
    }

[1m  # yandex_vpc_subnet.default[0m will be created[0m[0m
[0m  [32m+[0m[0m resource "yandex_vpc_subnet" "default" {
      [32m+[0m [0m[1m[0mcreated_at[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mfolder_id[0m[0m      = (known after apply)
      [32m+[0m [0m[1m[0mid[0m[0m             = (known after apply)
      [32m+[0m [0m[1m[0mlabels[0m[0m         = (known after apply)
      [32m+[0m [0m[1m[0mname[0m[0m           = "subnet"
      [32m+[0m [0m[1m[0mnetwork_id[0m[0m     = (known after apply)
      [32m+[0m [0m[1m[0mv4_cidr_blocks[0m[0m = [
          [32m+[0m [0m"192.168.101.0/24",
        ]
      [32m+[0m [0m[1m[0mv6_cidr_blocks[0m[0m = (known after apply)
      [32m+[0m [0m[1m[0mzone[0m[0m           = "ru-central1-a"
    }

[0m[1mPlan:[0m 4 to add, 0 to change, 0 to destroy.
[0m[90m
â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
